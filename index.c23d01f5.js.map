{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAkB,SAAS,aAAa,CAAC,kBAI3C,EAAW,EAAM,IAAI,CAAC,MAAM,CAE1B,EAAgB,WACpB,EAAa,QAAQ,CAAG,GALV,GAMd,EAAa,QAAQ,CAAG,GALV,EASd,IAAM,EAAc,EAAW,EAAI,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,CAEhE,CAAA,EAAgB,QAAQ,CAAG,GAJR,GAKnB,EAAgB,QAAQ,CAAG,GAJR,CAKrB,EA4CA,EAAa,gBAAgB,CAAC,QA1CZ,WAChB,GAAI,EAjBU,GAiBU,CAGtB,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAE,IAC9C,EAAO,UAAU,EAEnB,CAAA,IACA,GACF,CACF,GAiCA,EAAa,gBAAgB,CAAC,QA/BZ,WACZ,EA5BU,IA6BZ,EAAM,SAAS,CAAC,IAChB,IACA,IAEJ,GA0BA,EAAgB,gBAAgB,CAAC,QAxBZ,WAGnB,GAAI,AAFgB,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CArChC,GAuCa,CACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,IAC5B,EAAM,IAAI,CAAC,EAAE,CAAC,UAAU,GAE1B,GACF,CACF,GAgBA,EAAgB,gBAAgB,CAAC,QAdZ,WAGnB,GAAI,AAFgB,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CA/ChC,EAiDa,CACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,IAC5B,EAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAE3B,GACF,CACF,GAOA,GACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var table = document.querySelector(\".field\");\n    var appendRowBtn = document.querySelector(\".append-row\");\n    var removeRowBtn = document.querySelector(\".remove-row\");\n    var appendColumnBtn = document.querySelector(\".append-column\");\n    var removeColumnBtn = document.querySelector(\".remove-column\");\n    var maxRows = 10;\n    var minRows = 2;\n    var rowCount = table.rows.length;\n    var updateButtons = function() {\n        appendRowBtn.disabled = rowCount >= maxRows;\n        removeRowBtn.disabled = rowCount <= minRows;\n        var maxColumns = 10;\n        var minColumns = 2;\n        var columnCount = rowCount > 0 ? table.rows[0].cells.length : 0;\n        appendColumnBtn.disabled = columnCount >= maxColumns;\n        removeColumnBtn.disabled = columnCount <= minColumns;\n    };\n    var appendRow = function() {\n        if (rowCount < maxRows) {\n            var newRow = table.insertRow();\n            for(var i = 0; i < table.rows[0].cells.length; i++)newRow.insertCell();\n            rowCount++;\n            updateButtons();\n        }\n    };\n    var removeRow = function() {\n        if (rowCount > minRows) {\n            table.deleteRow(-1);\n            rowCount--;\n            updateButtons();\n        }\n    };\n    var appendColumn = function() {\n        var columnCount = table.rows[0].cells.length;\n        if (columnCount < maxRows) {\n            for(var i = 0; i < rowCount; i++)table.rows[i].insertCell();\n            updateButtons();\n        }\n    };\n    var removeColumn = function() {\n        var columnCount = table.rows[0].cells.length;\n        if (columnCount > minRows) {\n            for(var i = 0; i < rowCount; i++)table.rows[i].deleteCell(-1);\n            updateButtons();\n        }\n    };\n    appendRowBtn.addEventListener(\"click\", appendRow);\n    removeRowBtn.addEventListener(\"click\", removeRow);\n    appendColumnBtn.addEventListener(\"click\", appendColumn);\n    removeColumnBtn.addEventListener(\"click\", removeColumn);\n    updateButtons();\n});\n\n//# sourceMappingURL=index.c23d01f5.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const table = document.querySelector('.field');\n  const appendRowBtn = document.querySelector('.append-row');\n  const removeRowBtn = document.querySelector('.remove-row');\n  const appendColumnBtn = document.querySelector('.append-column');\n  const removeColumnBtn = document.querySelector('.remove-column');\n\n  const maxRows = 10;\n  const minRows = 2;\n  let rowCount = table.rows.length;\n\n  const updateButtons = () => {\n    appendRowBtn.disabled = rowCount >= maxRows;\n    removeRowBtn.disabled = rowCount <= minRows;\n\n    const maxColumns = 10;\n    const minColumns = 2;\n    const columnCount = rowCount > 0 ? table.rows[0].cells.length : 0;\n\n    appendColumnBtn.disabled = columnCount >= maxColumns;\n    removeColumnBtn.disabled = columnCount <= minColumns;\n  };\n\n  const appendRow = () => {\n    if (rowCount < maxRows) {\n      const newRow = table.insertRow();\n\n      for (let i = 0; i < table.rows[0].cells.length; i++) {\n        newRow.insertCell();\n      }\n      rowCount++;\n      updateButtons();\n    }\n  };\n\n  const removeRow = () => {\n    if (rowCount > minRows) {\n      table.deleteRow(-1);\n      rowCount--;\n      updateButtons();\n    }\n  };\n\n  const appendColumn = () => {\n    const columnCount = table.rows[0].cells.length;\n\n    if (columnCount < maxRows) {\n      for (let i = 0; i < rowCount; i++) {\n        table.rows[i].insertCell();\n      }\n      updateButtons();\n    }\n  };\n\n  const removeColumn = () => {\n    const columnCount = table.rows[0].cells.length;\n\n    if (columnCount > minRows) {\n      for (let i = 0; i < rowCount; i++) {\n        table.rows[i].deleteCell(-1);\n      }\n      updateButtons();\n    }\n  };\n\n  appendRowBtn.addEventListener('click', appendRow);\n  removeRowBtn.addEventListener('click', removeRow);\n  appendColumnBtn.addEventListener('click', appendColumn);\n  removeColumnBtn.addEventListener('click', removeColumn);\n\n  updateButtons();\n});\n"],"names":["document","addEventListener","table","querySelector","appendRowBtn","removeRowBtn","appendColumnBtn","removeColumnBtn","rowCount","rows","length","updateButtons","disabled","columnCount","cells","newRow","insertRow","i","insertCell","deleteRow","deleteCell"],"version":3,"file":"index.c23d01f5.js.map"}